import matplotlib.pyplot as plt


plt.rcParams.update({'font.size': 18})

def draw_plot(loss, eval_loss, title, x, y):
    x *= 1.2
    y *= 1.2
    epoch = range(1, len(loss) + 1)
    print(epoch)
    # plt.title(title, fontsize="x-large")
    plt.plot(epoch, loss)
    plt.plot(epoch, eval_loss)
    coeff = -0.001
    # plt.text(len(loss) - 1.2 * x, max(loss) + coeff, "train_loss", color="red", size=18)
    # plt.text(len(loss) - 1.2 * x, max(loss) - y + coeff, "val_loss", color="green", size=18)
    # for i in range(len(loss)):
    #     plt.text(i+1, loss[i], loss[i])

    plt.ylabel("Loss", fontsize="large")
    plt.xlabel("Epoch", fontsize="large")
    plt.plot(epoch, loss, color='red', marker='o', markersize=5)
    plt.plot(epoch, eval_loss, color='green', marker='o', markersize=5)

    stepx = 1/(len(loss)*len(loss))
    plt.xlim(1-stepx, len(loss)+stepx)
    step = (max(loss+eval_loss) - min(loss+eval_loss))/25
    plt.ylim(min(loss+eval_loss) - step, max(loss+eval_loss) + step)
    plt.margins(1)
    plt.xticks([1,2,3])

    index_smallest = eval_loss.index(min(eval_loss)) + 1
    plt.plot(index_smallest, min(eval_loss), "black", marker="o", markersize=6)
    #plt.text(index_smallest, min(eval_loss) + 0.8 * y + 0.4 * y, min(eval_loss), fontsize="large")
    print(min(eval_loss))
    plt.plot(index_smallest, loss[index_smallest - 1], "black", marker="o", markersize=6)
    #plt.text(index_smallest, loss[index_smallest - 1] + 0.6 * y + 0.8 * y, loss[index_smallest - 1], fontsize="large")
    print(loss[index_smallest - 1])

    plt.show()


eval10000 = [0.004605, 0.003377, 0.002842, 0.002727, 0.002797, 0.002783, 0.002742]
loss10000 = [0.0159, 0.008, 0.0058, 0.0047, 0.0038, 0.0033, 0.0027]

# draw_plot(loss10000, eval10000, "ruT5-base-multitask, малая выборка", 0.7, 0.0008)


loss50000 = [0.0099, 0.0047, 0.0033, 0.0026, 0.0021, 0.0018]
eval50000 = [0.002888, 0.002559, 0.002431, 0.002286, 0.002294, 0.002474]
# draw_plot(loss50000, eval50000, "ruT5-base-multitask, средняя выборка", 0.7, 0.0005)


loss100000 = [0.0087, 0.0039, 0.0027, 0.0021, 0.0018, 0.0015]
eval100000 = [0.002483, 0.002160, 0.002046, 0.002039, 0.002127, 0.002201]

# draw_plot(loss100000, eval100000, "ruT5-base-multitask, большая выборка", 0.7, 0.0005)

loss10000_large = [0.029, 0.0043, 0.002]
eval10000_large = [0.002692, 0.002262, 0.0018]

draw_plot(loss10000_large, eval10000_large, "ruT5-large, малая выборка", 0.2, 0.0015)

loss50000_large = [0.0104, 0.0068, 0.0049, 0.0038, 0.0035, 0.0028, 0.0027, 0.0024, 0.0019, 0.0019]
eval50000_large = [0.00387, 0.00256, 0.00190, 0.00189, 0.00161, 0.00141, 0.00172, 0.00131, 0.0010, 0.001085]

# draw_plot(loss50000_large, eval50000_large, "ruT5-large, средняя выборка", 0.9, 0.0007)

loss_float = [0.2179, 0.0515, 0.0359, 0.0201, 0.015, 0.0119, 0.0101, 0.0092, 0.0098, 0.0071, 0.007]
eval_float = [0.03401, 0.01924, 0.01137, 0.008406, 0.005736, 0.004669, 0.004838, 0.003657, 0.002956, 0.004397, 0.003038]

# draw_plot(loss_float, eval_float, "ruT5-large, выборка с вещественными числами", 1.2, 0.013)

loss_float_and_int = [0.1091, 0.0236, 0.0222, 0.0116, 0.0116, 0.009, 0.0079, 0.0071]
eval_float_and_int = [0.0176, 0.007718, 0.007728, 0.0077, 0.0077, 0.004253, 0.004714, 0.00064]

# draw_plot(loss_float_and_int, eval_float_and_int, "ruT5-large, выборка с вещественными и целыми числами", 1, 0.007)

eval_small = [6.523246765136719, 2.6330807209014893, 0.5477989912033081, 0.1496862918138504, 0.10530776530504227,
              0.07551322877407074, 0.04723554477095604, 0.03761119768023491, 0.03344183787703514, 0.03022271953523159,
              0.02801387757062912, 0.025790046900510788, 0.024655109271407127, 0.02334403060376644,
              0.022107558324933052, 0.020725157111883163, 0.01956978812813759, 0.018673401325941086,
              0.01791486330330372, 0.01710127480328083, 0.016483021900057793, 0.015731126070022583,
              0.015213754959404469, 0.014401875436306, 0.014277230948209763, 0.013412459753453732, 0.012919760309159756,
              0.012659367173910141, 0.012335681356489658, 0.011920942924916744, 0.011433225125074387,
              0.011021108366549015, 0.010709111578762531, 0.010552944615483284, 0.010291006416082382,
              0.009896133095026016, 0.009625920094549656, 0.009373325854539871, 0.009025797247886658,
              0.008970536291599274, 0.008681985549628735, 0.008441575802862644, 0.008190341293811798,
              0.007978261448442936, 0.007818732410669327, 0.007576360832899809, 0.007329976186156273,
              0.007121405564248562, 0.007035919930785894, 0.006971587426960468, 0.006642777938395739,
              0.006484366487711668, 0.006417983677238226, 0.00632005650550127, 0.006133037619292736,
              0.006036058533936739, 0.005892671179026365, 0.005812083836644888, 0.005737022031098604,
              0.005564811173826456, 0.005564372520893812, 0.005428184289485216, 0.0052901143208146095,
              0.005249675363302231, 0.005046308506280184, 0.00502200098708272, 0.004935021977871656,
              0.004804735071957111, 0.004760659299790859, 0.00471207732334733, 0.004604276269674301,
              0.00452515808865428, 0.004544162191450596, 0.004446466453373432, 0.004392579663544893,
              0.004304747097194195, 0.004289735108613968, 0.004227033816277981, 0.004172621760517359,
              0.004152985755354166, 0.004086568485945463, 0.004027293063700199, 0.004000264685600996,
              0.003975857049226761, 0.003957989625632763, 0.0039375643245875835, 0.003891624743118882,
              0.0038942410610616207, 0.003829840337857604, 0.003804754698649049, 0.0037718263920396566,
              0.003754109377041459, 0.00373012013733387, 0.003724672831594944, 0.0037173889577388763,
              0.0037022496107965708, 0.0037051704712212086, 0.003703558584675193]
loss_small = [10.6962, 5.0685, 2.2516, 0.707, 0.3166, 0.1963, 0.1426, 0.1159, 0.0998, 0.0854, 0.0778, 0.0732, 0.0685,
              0.0634, 0.0609, 0.0571, 0.0539, 0.0551, 0.0532, 0.0491, 0.0488, 0.0467, 0.0441, 0.0426, 0.0418, 0.041,
              0.0421, 0.0401, 0.0366, 0.0361, 0.0349, 0.0353, 0.0339, 0.0345, 0.0347, 0.0323, 0.0308, 0.0308, 0.0302,
              0.031, 0.0283, 0.0283, 0.028, 0.0281, 0.0289, 0.0271, 0.0264, 0.027, 0.0259, 0.0233, 0.024, 0.0247,
              0.0244, 0.0253, 0.0243, 0.023, 0.0223, 0.023, 0.0218, 0.0233, 0.0223, 0.0213, 0.0215, 0.022, 0.0217,
              0.0219, 0.0206, 0.0202, 0.0201, 0.0197, 0.0203, 0.0191, 0.0196, 0.0199, 0.0191, 0.0179, 0.021, 0.0188,
              0.0181, 0.018, 0.0179, 0.0183, 0.0192, 0.0179, 0.0191, 0.0188, 0.0179, 0.0175, 0.0175, 0.0178, 0.0191,
              0.0168, 0.0168, 0.018, 0.018, 0.0168, 0.0189, 0.017]

# draw_plot(eval_small, loss_small, "ruT5-small, большая выборка", 10, 0.7)


eval_gpt = [0.1072, 0.1313, 0.3038]
loss_gpt = [0.2743, 1.3434, 0.2408]

# draw_plot(eval_gpt, loss_gpt, "ruGPT3small_based_on_2, малая выборка", 0.2, 0.07)

loss_all = [
    0.0863,
    0.0284,
    0.0167,
    0.0124,
    0.0107,
    0.0091,
    0.0085,
    0.007,
    0.0063,
    0.0055,
    0.0051,
    0.0046,
    0.0045,
    0.0044,
    0.0044,
    0.0036,
    0.0034
]

eval_all = [
    0.0179,
    0.0105,
    0.0080,
    0.0069,
    0.0057,
    0.0062,
    0.0038,
    0.00369,
    0.00361,
    0.00315,
    0.00267,
    0.00279,
    0.00249,
    0.00267,
    0.00166,
    0.00197,
    0.00262,
]

# draw_plot(loss_all, eval_all, "ruT5-large, общая выборка", 1.5, 0.005)
